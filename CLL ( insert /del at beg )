class CNode:
    def __init__(self, data):
        self.data = data
        self.next = None

class CircularLinkedList:
    def __init__(self):
        self.head = None

    def insert_at_beginning(self, data):
        new = CNode(data)
        if not self.head:
            self.head = new
            new.next = self.head
            return
        cur = self.head
        while cur.next != self.head:
            cur = cur.next
        new.next = self.head
        cur.next = new
        self.head = new

    def delete_at_beginning(self):
        if not self.head:
            print("List empty")
            return
        if self.head.next == self.head:
            self.head = None
            return
        cur = self.head
        while cur.next != self.head:
            cur = cur.next
        cur.next = self.head.next
        self.head = self.head.next

    def display(self):
        if not self.head:
            print("List empty")
            return
        cur = self.head
        while True:
            print(cur.data, end=" -> ")
            cur = cur.next
            if cur == self.head:
                break
        print("(back to head)")


# Demo
print("\n--- Circular Linked List ---")
cll = CircularLinkedList()
cll.insert_at_beginning(10)
cll.insert_at_beginning(20)
cll.insert_at_beginning(30)
cll.display()      # 30 -> 20 -> 10 -> (back to head)
cll.delete_at_beginning()
cll.display()      # 20 -> 10 -> (back to head)