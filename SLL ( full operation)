class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class SinglyLinkedList:
    def __init__(self):
        self.head = None

    def insert_at_beginning(self, data):
        new = Node(data)
        new.next = self.head
        self.head = new

    def insert_at_end(self, data):
        new = Node(data)
        if not self.head:
            self.head = new
            return
        cur = self.head
        while cur.next:
            cur = cur.next
        cur.next = new

    def insert_at_position(self, pos, data):
        new = Node(data)
        if pos == 0:
            self.insert_at_beginning(data)
            return
        cur = self.head
        for _ in range(pos - 1):
            if not cur:
                print("Position out of range")
                return
            cur = cur.next
        new.next = cur.next
        cur.next = new

    def delete_at_beginning(self):
        if not self.head:
            print("List empty")
            return
        self.head = self.head.next

    def delete_at_end(self):
        if not self.head:
            print("List empty")
            return
        if not self.head.next:
            self.head = None
            return
        cur = self.head
        while cur.next.next:
            cur = cur.next
        cur.next = None

    def delete_at_position(self, pos):
        if not self.head:
            print("List empty")
            return
        if pos == 0:
            self.delete_at_beginning()
            return
        cur = self.head
        for _ in range(pos - 1):
            if not cur.next:
                print("Position out of range")
                return
            cur = cur.next
        cur.next = cur.next.next if cur.next else None

    def display(self):
        cur = self.head
        while cur:
            print(cur.data, end=" -> ")
            cur = cur.next
        print("None")


# Demo
print("\n--- Singly Linked List ---")
sll = SinglyLinkedList()
sll.insert_at_end(10)
sll.insert_at_end(20)
sll.insert_at_beginning(5)
sll.insert_at_position(2, 15)
sll.display()      # 5 -> 10 -> 15 -> 20 -> None
sll.delete_at_beginning()
sll.display()      # 10 -> 15 -> 20 -> None
sll.delete_at_end()
sll.display()      # 10 -> 15 -> None
sll.delete_at_position(1)
sll.display()      # 10 -> None